Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS C:\Users\Whide> az login
A web browser has been opened at https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize. Please continue the login in the web browser. If no web browser is available or if the web browser fails to open, use device code flow with `az login --use-device-code`.
[
  {
    "cloudName": "AzureCloud",
    "homeTenantId": "1d6a56fa-705a-4bbc-8004-67a21d5e9b97",
    "id": "8a4662cc-45d9-4381-bdf4-f55bfcd14e15",
    "isDefault": true,
    "managedByTenants": [],
    "name": "Azure for Students",
    "state": "Enabled",
    "tenantId": "1d6a56fa-705a-4bbc-8004-67a21d5e9b97",
    "user": {
      "name": "villam.david@stud.uni-obuda.hu",
      "type": "user"
    }
  }
]
PS C:\Users\Whide> az aks get-credentials --resource-group kubernetes_resources --name myASKCluster
(ResourceNotFound) The Resource 'Microsoft.ContainerService/managedClusters/myASKCluster' under resource group 'kubernetes_resources' was not found. For more details please go to https://aka.ms/ARMResourceNotFoundFix
Code: ResourceNotFound
Message: The Resource 'Microsoft.ContainerService/managedClusters/myASKCluster' under resource group 'kubernetes_resources' was not found. For more details please go to https://aka.ms/ARMResourceNotFoundFix
PS C:\Users\Whide> az aks get-credentials --resource-group kubernetes_resources --name myAKSCluster
Merged "myAKSCLuster" as current context in C:\Users\Whide\.kube\config
PS C:\Users\Whide> kubectl get nodes
NAME                                STATUS   ROLES   AGE   VERSION
aks-agentpool-25154290-vmss000000   Ready    agent   42m   v1.21.9
PS C:\Users\Whide> kubectl run my-app --image=arpito/arpitodockerrepo:mylinuxadventureworksdbserver --port==3306
error: strconv.Atoi: parsing "=3306": invalid syntax
PS C:\Users\Whide> kubectl run my-app --image=arpito/arpitodockerrepo:mylinuxadventureworksdbserver --port=3306
pod/my-app created
PS C:\Users\Whide> kubectl get pods
NAME     READY   STATUS    RESTARTS   AGE
my-app   1/1     Running   0          72s
PS C:\Users\Whide> kubectl exec --stdin --tty my-app-d7c65d895-pzx9m -- /bin/bash
Error from server (NotFound): pods "my-app-d7c65d895-pzx9m" not found
PS C:\Users\Whide> kubectl exec --stdin --tty my-app -- /bin/bash
root@my-app:/# mysqladmin -u root -p status
Enter password:
mysqladmin: connect to server at 'localhost' failed
error: 'Access denied for user 'root'@'localhost' (using password: YES)'
root@my-app:/# kubectl port-forward pod/my-app 3333:3306
bash: kubectl: command not found
root@my-app:/# exit
exit
command terminated with exit code 127
PS C:\Users\Whide> kubectl port-forward pod/my-app 3333:3306
Forwarding from 127.0.0.1:3333 -> 3306
Forwarding from [::1]:3333 -> 3306
PS C:\Users\Whide> kubectl run my-nginx --image=nginx --port==3307
error: strconv.Atoi: parsing "=3307": invalid syntax
PS C:\Users\Whide> kubectl run my-nginx --image=nginx --port=3307
pod/my-nginx created
PS C:\Users\Whide> kubectl get pods
NAME       READY   STATUS              RESTARTS   AGE
my-app     1/1     Running             0          17m
my-nginx   0/1     ContainerCreating   0          10s
PS C:\Users\Whide> kubectl get pods
NAME       READY   STATUS    RESTARTS   AGE
my-app     1/1     Running   0          19m
my-nginx   1/1     Running   0          2m19s
PS C:\Users\Whide> kubectl exec my-nginx
error: you must specify at least one command for the container
PS C:\Users\Whide> kubectl exec my-nginx -- /bin/bash
PS C:\Users\Whide> kubectl get pods
NAME       READY   STATUS    RESTARTS   AGE
my-app     1/1     Running   0          23m
my-nginx   1/1     Running   0          6m8s
PS C:\Users\Whide> kubectl get pods -wide
Error: unknown shorthand flag: 'i' in -ide
See 'kubectl get --help' for usage.
PS C:\Users\Whide> kubectl get pods --help
Display one or many resources.

 Prints a table of the most important information about the specified resources. You can filter the list using a label
selector and the --selector flag. If the desired resource type is namespaced you will only see results in your current
namespace unless you pass --all-namespaces.

 Uninitialized objects are not shown unless --include-uninitialized is passed.

 By specifying the output as 'template' and providing a Go template as the value of the --template flag, you can filter
the attributes of the fetched resources.

Use "kubectl api-resources" for a complete list of supported resources.

Examples:
  # List all pods in ps output format
  kubectl get pods

  # List all pods in ps output format with more information (such as node name)
  kubectl get pods -o wide

  # List a single replication controller with specified NAME in ps output format
  kubectl get replicationcontroller web

  # List deployments in JSON output format, in the "v1" version of the "apps" API group
  kubectl get deployments.v1.apps -o json

  # List a single pod in JSON output format
  kubectl get -o json pod web-pod-13je7

  # List a pod identified by type and name specified in "pod.yaml" in JSON output format
  kubectl get -f pod.yaml -o json

  # List resources from a directory with kustomization.yaml - e.g. dir/kustomization.yaml
  kubectl get -k dir/

  # Return only the phase value of the specified pod
  kubectl get -o template pod/web-pod-13je7 --template={{.status.phase}}

  # List resource information in custom columns
  kubectl get pod test-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image

  # List all replication controllers and services together in ps output format
  kubectl get rc,services

  # List one or more resources by their type and names
  kubectl get rc/web service/frontend pods/web-pod-13je7

Options:
  -A, --all-namespaces=false: If present, list the requested object(s) across all namespaces. Namespace in current
context is ignored even if specified with --namespace.
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in
the template. Only applies to golang and jsonpath output formats.
      --chunk-size=500: Return large lists in chunks rather than all at once. Pass 0 to disable. This flag is beta and
may change in the future.
      --field-selector='': Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector
key1=value1,key2=value2). The server only supports a limited number of field queries per type.
  -f, --filename=[]: Filename, directory, or URL to files identifying the resource to get from a server.
      --ignore-not-found=false: If the requested object does not exist the command will return exit code 0.
  -k, --kustomize='': Process the kustomization directory. This flag can't be used together with -f or -R.
  -L, --label-columns=[]: Accepts a comma separated list of labels that are going to be presented as columns. Names are
case-sensitive. You can also use multiple flag options like -L label1 -L label2...
      --no-headers=false: When using the default or custom-column output format, don't print headers (default print
headers).
  -o, --output='': Output format. One of:
json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file|custom-columns|custom-columns-file|wide
See custom columns [https://kubernetes.io/docs/reference/kubectl/overview/#custom-columns], golang template
[http://golang.org/pkg/text/template/#pkg-overview] and jsonpath template
[https://kubernetes.io/docs/reference/kubectl/jsonpath/].
      --output-watch-events=false: Output watch event objects when --watch or --watch-only is used. Existing objects are
output as initial ADDED events.
      --raw='': Raw URI to request from the server.  Uses the transport specified by the kubeconfig file.
  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage
related manifests organized within the same directory.
  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)
      --server-print=true: If true, have the server return the appropriate table output. Supports extension APIs and
CRDs.
      --show-kind=false: If present, list the resource type for the requested object(s).
      --show-labels=false: When printing, show all labels as the last column (default hide labels column)
      --show-managed-fields=false: If true, keep the managedFields when printing objects in JSON or YAML format.
      --sort-by='': If non-empty, sort list types using this field specification.  The field specification is expressed
as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression
must be an integer or a string.
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The
template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
  -w, --watch=false: After listing/getting the requested object, watch for changes. Uninitialized objects are excluded
if no object name is provided.
      --watch-only=false: Watch for changes to the requested object(s), without listing/getting first.

Usage:
  kubectl get
[(-o|--output=)json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file|custom-columns-file|custom-columns|wide]
(TYPE[.VERSION][.GROUP] [NAME | -l label] | TYPE[.VERSION][.GROUP]/NAME ...) [flags] [options]

Use "kubectl options" for a list of global command-line options (applies to all commands).
PS C:\Users\Whide> kubectl show pods
Error: unknown command "show" for "kubectl"
Run 'kubectl --help' for usage.
PS C:\Users\Whide> kubectl get pods
NAME       READY   STATUS    RESTARTS   AGE
my-app     1/1     Running   0          25m
my-nginx   1/1     Running   0          8m2s
PS C:\Users\Whide> kubectl get pods -o wide
NAME       READY   STATUS    RESTARTS   AGE     IP            NODE                                NOMINATED NODE   READINESS GATES
my-app     1/1     Running   0          26m     10.244.0.10   aks-agentpool-25154290-vmss000000   <none>           <none>
my-nginx   1/1     Running   0          9m34s   10.244.0.11   aks-agentpool-25154290-vmss000000   <none>           <none>
PS C:\Users\Whide> kubectl get service --all-namepsaces
Error: unknown flag: --all-namepsaces
See 'kubectl get --help' for usage.
PS C:\Users\Whide> kubectl get service --all-namespaces
NAMESPACE     NAME                             TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)         AGE
default       kubernetes                       ClusterIP   10.0.0.1       <none>        443/TCP         74m
kube-system   healthmodel-replicaset-service   ClusterIP   10.0.182.191   <none>        25227/TCP       73m
kube-system   kube-dns                         ClusterIP   10.0.0.10      <none>        53/UDP,53/TCP   74m
kube-system   metrics-server                   ClusterIP   10.0.166.223   <none>        443/TCP         74m
PS C:\Users\Whide> kubectl port-forward pod/my-nginx 3333:3307
Forwarding from 127.0.0.1:3333 -> 3307
Forwarding from [::1]:3333 -> 3307
Handling connection for 3333
E0331 21:08:03.770988    6128 portforward.go:400] an error occurred forwarding 3333 -> 3307: error forwarding port 3307 to pod c014c039509d3e0afb56b89613522556ea7e8a3e83c337553db2646842312032, uid : failed to execute portforward in network namespace "/var/run/netns/cni-5d27a5f1-732b-88b0-3159-6856fef30b97": failed to dial 3307: dial tcp4 127.0.0.1:3307: connect: connection refused
Handling connection for 3333
E0331 21:08:05.232077    6128 portforward.go:400] an error occurred forwarding 3333 -> 3307: error forwarding port 3307 to pod c014c039509d3e0afb56b89613522556ea7e8a3e83c337553db2646842312032, uid : failed to execute portforward in network namespace "/var/run/netns/cni-5d27a5f1-732b-88b0-3159-6856fef30b97": failed to dial 3307: dial tcp4 127.0.0.1:3307: connect: connection refused
Handling connection for 3333
E0331 21:08:10.657734    6128 portforward.go:400] an error occurred forwarding 3333 -> 3307: error forwarding port 3307 to pod c014c039509d3e0afb56b89613522556ea7e8a3e83c337553db2646842312032, uid : failed to execute portforward in network namespace "/var/run/netns/cni-5d27a5f1-732b-88b0-3159-6856fef30b97": failed to dial 3307: dial tcp4 127.0.0.1:3307: connect: connection refused
Handling connection for 3333
E0331 21:09:10.701779    6128 portforward.go:340] error creating error stream for port 3333 -> 3307: Timeout occurred
PS C:\Users\Whide> kubectl port-forward pod/my-nginx 3333:80
Forwarding from 127.0.0.1:3333 -> 80
Forwarding from [::1]:3333 -> 80
Handling connection for 3333
